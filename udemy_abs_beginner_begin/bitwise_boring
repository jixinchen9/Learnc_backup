	printf("gimme like 2 numbers:\n");
	uint8_t number_01, number_02;

	scanf("%" SCNu8, &number_01);
	scanf("%" SCNu8, &number_02);
	
	printf("bitwise AND %d \n", number_01 & number_02);
	printf("bitwise or %d \n", number_01 | number_02);
	printf("bitwise xor %d \n", number_01 ^ number_02);
	printf("bitwise not %d \n", ~number_02);
	//this last one doesnt quite hit

	int main() {
	printf("enter integer:\n");
	uint8_t number_01;
	scanf("%" SCNu8, &number_01);

	printf("original input: %d\n", number_01);
	printf("set the 4th, set the 7th: %d\n", number_01 | 0b10010000);
	printf("clear the 4th, clear the 7th: %d\n", number_01 & (~0b10010000));
	return 0;
	}
		/*
	* in this code, we did bit setting w OR, in general the bit you want to set are 1 in the mask
	* then we did bit clearing w AND, the bitmask is such that the bits you want to clear are 0 with others being 1
	*/